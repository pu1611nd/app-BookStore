// Generated by view binder compiler. Do not edit!
package com.tuan1611pupu.appbansach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tuan1611pupu.appbansach.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminListbookBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout adminListBookContainer;

  @NonNull
  public final ListView adminLv;

  @NonNull
  public final Button btnAddBook;

  @NonNull
  public final ImageFilterButton btnBack;

  @NonNull
  public final ImageFilterButton btnForward;

  @NonNull
  public final Button btnTimkiem;

  @NonNull
  public final LinearLayout linearBook;

  @NonNull
  public final EditText tvBookOfTitle;

  @NonNull
  public final TextView tvBookZero;

  @NonNull
  public final TextView tvPage;

  @NonNull
  public final TextView tvPages;

  private FragmentAdminListbookBinding(@NonNull LinearLayout rootView,
      @NonNull FrameLayout adminListBookContainer, @NonNull ListView adminLv,
      @NonNull Button btnAddBook, @NonNull ImageFilterButton btnBack,
      @NonNull ImageFilterButton btnForward, @NonNull Button btnTimkiem,
      @NonNull LinearLayout linearBook, @NonNull EditText tvBookOfTitle,
      @NonNull TextView tvBookZero, @NonNull TextView tvPage, @NonNull TextView tvPages) {
    this.rootView = rootView;
    this.adminListBookContainer = adminListBookContainer;
    this.adminLv = adminLv;
    this.btnAddBook = btnAddBook;
    this.btnBack = btnBack;
    this.btnForward = btnForward;
    this.btnTimkiem = btnTimkiem;
    this.linearBook = linearBook;
    this.tvBookOfTitle = tvBookOfTitle;
    this.tvBookZero = tvBookZero;
    this.tvPage = tvPage;
    this.tvPages = tvPages;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminListbookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminListbookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_listbook, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminListbookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_list_book_container;
      FrameLayout adminListBookContainer = ViewBindings.findChildViewById(rootView, id);
      if (adminListBookContainer == null) {
        break missingId;
      }

      id = R.id.admin_lv;
      ListView adminLv = ViewBindings.findChildViewById(rootView, id);
      if (adminLv == null) {
        break missingId;
      }

      id = R.id.btnAddBook;
      Button btnAddBook = ViewBindings.findChildViewById(rootView, id);
      if (btnAddBook == null) {
        break missingId;
      }

      id = R.id.btn_back;
      ImageFilterButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_forward;
      ImageFilterButton btnForward = ViewBindings.findChildViewById(rootView, id);
      if (btnForward == null) {
        break missingId;
      }

      id = R.id.btnTimkiem;
      Button btnTimkiem = ViewBindings.findChildViewById(rootView, id);
      if (btnTimkiem == null) {
        break missingId;
      }

      id = R.id.linear_book;
      LinearLayout linearBook = ViewBindings.findChildViewById(rootView, id);
      if (linearBook == null) {
        break missingId;
      }

      id = R.id.tvBookOfTitle;
      EditText tvBookOfTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvBookOfTitle == null) {
        break missingId;
      }

      id = R.id.tv_bookZero;
      TextView tvBookZero = ViewBindings.findChildViewById(rootView, id);
      if (tvBookZero == null) {
        break missingId;
      }

      id = R.id.tv_page;
      TextView tvPage = ViewBindings.findChildViewById(rootView, id);
      if (tvPage == null) {
        break missingId;
      }

      id = R.id.tv_pages;
      TextView tvPages = ViewBindings.findChildViewById(rootView, id);
      if (tvPages == null) {
        break missingId;
      }

      return new FragmentAdminListbookBinding((LinearLayout) rootView, adminListBookContainer,
          adminLv, btnAddBook, btnBack, btnForward, btnTimkiem, linearBook, tvBookOfTitle,
          tvBookZero, tvPage, tvPages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
