// Generated by view binder compiler. Do not edit!
package com.tuan1611pupu.appbansach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tuan1611pupu.appbansach.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnInvoiceMember;

  @NonNull
  public final Button btnLogOut;

  @NonNull
  public final TextView emailLabel;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvFullname;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final TextView usernameLabel;

  private FragmentMyPageBinding(@NonNull LinearLayout rootView, @NonNull Button btnInvoiceMember,
      @NonNull Button btnLogOut, @NonNull TextView emailLabel, @NonNull ImageView imageView,
      @NonNull TextView tvEmail, @NonNull TextView tvFullname, @NonNull TextView tvUsername,
      @NonNull TextView usernameLabel) {
    this.rootView = rootView;
    this.btnInvoiceMember = btnInvoiceMember;
    this.btnLogOut = btnLogOut;
    this.emailLabel = emailLabel;
    this.imageView = imageView;
    this.tvEmail = tvEmail;
    this.tvFullname = tvFullname;
    this.tvUsername = tvUsername;
    this.usernameLabel = usernameLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_invoiceMember;
      Button btnInvoiceMember = ViewBindings.findChildViewById(rootView, id);
      if (btnInvoiceMember == null) {
        break missingId;
      }

      id = R.id.btn_logOut;
      Button btnLogOut = ViewBindings.findChildViewById(rootView, id);
      if (btnLogOut == null) {
        break missingId;
      }

      id = R.id.email_label;
      TextView emailLabel = ViewBindings.findChildViewById(rootView, id);
      if (emailLabel == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvFullname;
      TextView tvFullname = ViewBindings.findChildViewById(rootView, id);
      if (tvFullname == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.username_label;
      TextView usernameLabel = ViewBindings.findChildViewById(rootView, id);
      if (usernameLabel == null) {
        break missingId;
      }

      return new FragmentMyPageBinding((LinearLayout) rootView, btnInvoiceMember, btnLogOut,
          emailLabel, imageView, tvEmail, tvFullname, tvUsername, usernameLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
