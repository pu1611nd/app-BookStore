// Generated by view binder compiler. Do not edit!
package com.tuan1611pupu.appbansach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tuan1611pupu.appbansach.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInvoiceDatalBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button checkoutButton;

  @NonNull
  public final EditText customerAddress;

  @NonNull
  public final EditText customerName;

  @NonNull
  public final EditText customerPhone;

  @NonNull
  public final ListView productsList;

  @NonNull
  public final TextView totalPrice;

  @NonNull
  public final Button xacNhanButton;

  private ActivityInvoiceDatalBinding(@NonNull ScrollView rootView, @NonNull Button checkoutButton,
      @NonNull EditText customerAddress, @NonNull EditText customerName,
      @NonNull EditText customerPhone, @NonNull ListView productsList, @NonNull TextView totalPrice,
      @NonNull Button xacNhanButton) {
    this.rootView = rootView;
    this.checkoutButton = checkoutButton;
    this.customerAddress = customerAddress;
    this.customerName = customerName;
    this.customerPhone = customerPhone;
    this.productsList = productsList;
    this.totalPrice = totalPrice;
    this.xacNhanButton = xacNhanButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInvoiceDatalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInvoiceDatalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_invoice_datal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInvoiceDatalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkout_button;
      Button checkoutButton = ViewBindings.findChildViewById(rootView, id);
      if (checkoutButton == null) {
        break missingId;
      }

      id = R.id.customer_address;
      EditText customerAddress = ViewBindings.findChildViewById(rootView, id);
      if (customerAddress == null) {
        break missingId;
      }

      id = R.id.customer_name;
      EditText customerName = ViewBindings.findChildViewById(rootView, id);
      if (customerName == null) {
        break missingId;
      }

      id = R.id.customer_phone;
      EditText customerPhone = ViewBindings.findChildViewById(rootView, id);
      if (customerPhone == null) {
        break missingId;
      }

      id = R.id.products_list;
      ListView productsList = ViewBindings.findChildViewById(rootView, id);
      if (productsList == null) {
        break missingId;
      }

      id = R.id.total_price;
      TextView totalPrice = ViewBindings.findChildViewById(rootView, id);
      if (totalPrice == null) {
        break missingId;
      }

      id = R.id.xacNhan_button;
      Button xacNhanButton = ViewBindings.findChildViewById(rootView, id);
      if (xacNhanButton == null) {
        break missingId;
      }

      return new ActivityInvoiceDatalBinding((ScrollView) rootView, checkoutButton, customerAddress,
          customerName, customerPhone, productsList, totalPrice, xacNhanButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
