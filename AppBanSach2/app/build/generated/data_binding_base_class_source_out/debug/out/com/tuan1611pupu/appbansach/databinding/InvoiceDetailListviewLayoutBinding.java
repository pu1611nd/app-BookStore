// Generated by view binder compiler. Do not edit!
package com.tuan1611pupu.appbansach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tuan1611pupu.appbansach.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InvoiceDetailListviewLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView lvImg1;

  @NonNull
  public final TextView lvTxtPrice1;

  @NonNull
  public final TextView lvTxtQuantity;

  @NonNull
  public final TextView lvTxtTitle1;

  @NonNull
  public final TextView tvTongTien;

  private InvoiceDetailListviewLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView lvImg1, @NonNull TextView lvTxtPrice1, @NonNull TextView lvTxtQuantity,
      @NonNull TextView lvTxtTitle1, @NonNull TextView tvTongTien) {
    this.rootView = rootView;
    this.lvImg1 = lvImg1;
    this.lvTxtPrice1 = lvTxtPrice1;
    this.lvTxtQuantity = lvTxtQuantity;
    this.lvTxtTitle1 = lvTxtTitle1;
    this.tvTongTien = tvTongTien;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InvoiceDetailListviewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InvoiceDetailListviewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.invoice_detail_listview_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InvoiceDetailListviewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.lv_img1;
      ImageView lvImg1 = ViewBindings.findChildViewById(rootView, id);
      if (lvImg1 == null) {
        break missingId;
      }

      id = R.id.lv_txt_price1;
      TextView lvTxtPrice1 = ViewBindings.findChildViewById(rootView, id);
      if (lvTxtPrice1 == null) {
        break missingId;
      }

      id = R.id.lv_txt_quantity;
      TextView lvTxtQuantity = ViewBindings.findChildViewById(rootView, id);
      if (lvTxtQuantity == null) {
        break missingId;
      }

      id = R.id.lv_txt_title1;
      TextView lvTxtTitle1 = ViewBindings.findChildViewById(rootView, id);
      if (lvTxtTitle1 == null) {
        break missingId;
      }

      id = R.id.tv_tongTien;
      TextView tvTongTien = ViewBindings.findChildViewById(rootView, id);
      if (tvTongTien == null) {
        break missingId;
      }

      return new InvoiceDetailListviewLayoutBinding((RelativeLayout) rootView, lvImg1, lvTxtPrice1,
          lvTxtQuantity, lvTxtTitle1, tvTongTien);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
